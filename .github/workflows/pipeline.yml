name: CI/CD Pipeline

on:
  push:
    tags:
       - '*'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arnested/go-version-action@v1
        id: go-version
      - name: Install Go ${{ steps.go-version.outputs.minimal }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.go-version.outputs.minimal }}
      - name: Run Integration Tests
        run: go test ./test

  build-dev:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with:
        login-server: scvregistry.azurecr.io
        username: ${{ secrets.AzureContainerRegistry_Username }}
        password: ${{ secrets.AzureContainerRegistry_Password }}
    - run: |
        export TAG=${{ steps.vars.outputs.tag }} && docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml build --no-cache
        docker push scvregistry.azurecr.io/go-mongo-restapi_api.dev:${{ steps.vars.outputs.tag }}

  build-test:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with:
        login-server: scvregistry.azurecr.io
        username: ${{ secrets.AzureContainerRegistry_Username }}
        password: ${{ secrets.AzureContainerRegistry_Password }}
    - run: |
        export TAG=${{ steps.vars.outputs.tag }} && docker-compose -f docker/docker-compose.yml -f docker/docker-compose.test.yml build --no-cache
        docker push scvregistry.azurecr.io/go-mongo-restapi_api.test:${{ steps.vars.outputs.tag }}

  build-prod:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: actions/checkout@v2
    - uses: azure/docker-login@v1
      with:
        login-server: scvregistry.azurecr.io
        username: ${{ secrets.AzureContainerRegistry_Username }}
        password: ${{ secrets.AzureContainerRegistry_Password }}
    - run: |
        export TAG=${{ steps.vars.outputs.tag }} && docker-compose -f docker/docker-compose.yml -f docker/docker-compose.prod.yml build --no-cache
        docker push scvregistry.azurecr.io/go-mongo-restapi_api.prod:${{ steps.vars.outputs.tag }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-dev
    environment: dev
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'go-mongo-restapi-dev'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_Dev }}
        images: 'scvregistry.azurecr.io/go-mongo-restapi_api.dev:${{ steps.vars.outputs.tag }}'

  deploy-test:
    runs-on: ubuntu-latest
    needs: build-test
    environment: test
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'go-mongo-restapi-test'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_Test }}
        images: 'scvregistry.azurecr.io/go-mongo-restapi_api.test:${{ steps.vars.outputs.tag }}'

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-prod
    environment: prod
    steps:
    - id: vars
      run: echo ::set-output name=tag::$(echo ${{ github.ref_name }} | xargs basename)
    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'go-mongo-restapi'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_Prod }}
        images: 'scvregistry.azurecr.io/go-mongo-restapi_api.prod:${{ steps.vars.outputs.tag }}'
